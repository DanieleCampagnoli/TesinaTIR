% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bins_conv_transmission.R
\name{bins_conv_transmission}
\alias{bins_conv_transmission}
\title{quante volte i flussi di tipo protocol hanno trasmesso nei bin temporali indicati da bins}
\usage{
bins_conv_transmission(streams_id, protocol, filename, bins, step_size)
}
\arguments{
\item{streams_id}{array dei flussi da considerare}

\item{protocol}{protocollo dei flussi}

\item{bins}{array dei bin temporali}

\item{step_size}{dimensione dei bin}
}
\value{
array che contiene le frequenze dei bin
}
\description{
quante volte i flussi di tipo protocol hanno trasmesso nei bin temporali indicati da bins
}
\examples{
library(TesinaTIR)
filename<-system.file("extdata", "dump.pcap", package = "TesinaTIR")
step_size<-1
#stream id massimi di udp e tcp
max_stream_id_tcp<-get_max_stream_id(filename,'tcp')
max_stream_id_udp<-get_max_stream_id(filename,'udp')

#generazione di tutti gli stream id udp e tcp
streams_id_tcp<-get_streams_id(max_stream_id_tcp)
streams_id_udp<-get_streams_id(max_stream_id_udp)

#calcolo durata massima conversazioni udp e tcp
max_duration_tcp<-max(get_conv_durations_TcpUdp(filename,'tcp'))
max_duration_udp<-max(get_conv_durations_TcpUdp(filename,'udp'))

#calcolo bin temporali udp e tcp
bins_tcp=seq(0,max_duration_tcp,step_size)
bins_udp=seq(0,max_duration_udp,step_size)
#valori bin udp e tcp
bins_conv_transmission_tcp<-bins_conv_transmission(streams_id_tcp,'tcp',filename,bins_tcp,step_size)
bins_conv_transmission_udp<-bins_conv_transmission(streams_id_udp,'udp',filename,bins_udp,step_size)
}
\seealso{
\code{\link[TesinaTIR]{get_conv_timeRelative_frameLen}} la funzione dipende da questa funzione

\code{\link[TesinaTIR]{compute_bins_count}} la funzione dipende da questa funzione
}

