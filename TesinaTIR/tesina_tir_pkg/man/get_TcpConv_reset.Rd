% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_TcpConv_reset.R
\name{get_TcpConv_reset}
\alias{get_TcpConv_reset}
\title{terminazione flusso con reset}
\usage{
get_TcpConv_reset(filename, streams_id, fin)
}
\arguments{
\item{filename}{nome del file pcap}

\item{streams_id}{id delle conversazioni del pcap}

\item{streams_id}{per ogni conversazione abbiamo TRUE se la conversazione \cr
ha due fin al suo interno o FALSE viceversa}
}
\description{
Questa funzione calcola se i flussi in input sono stati terminati da reset o meno.\cr
Un flusso Ã¨ terminato da reset se ha almeno un reset al suo interno e non ha due fin. \cr
Comando di wireshark di prova:\cr
tshark -r GazzettaDiModena_20161120.pcap  -z io,stat,0,'COUNT(tcp.flags.reset)tcp.flags.reset and tcp.flags.reset==1 and tcp.stream==11' -q \cr
}
\examples{
library(TesinaTIR)
filename<-system.file("extdata", "dump.pcap", package = "TesinaTIR")
#tempo massimo relativo del pcap
tmax<-tmaxPcap(filename)
#estrazione flussi sottoforma di stream id
#stream id va da 0 a 'MAX(tcp.stream)tcp.stream'
#stream id massimo
max_stream_id<-get_max_stream_id(filename,'tcp')
#genero tutti gli stream id
streams_id<-get_streams_id(max_stream_id)
#terminazione flusso con fin
fin<-get_TcpConv_correct_fwh(filename,streams_id)
#terminazione flusso con reset
l_reset<-get_TcpConv_reset(filename,streams_id,fin)
}

